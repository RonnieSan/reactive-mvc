

// Table reset
.page-view {

	table {
		background-color: @colorTableBkg;
		border-spacing: 0;
		max-width: 100%;
	 
		thead > tr > th,
		tbody > tr > td {
			.border-box;
			border-top: 1px solid @colorTableBorder;
			font-size: @sizeFontNormal;
			padding: 8px;
			text-align: left;
			vertical-align: top;
		}
	 
		> thead {
			> tr > th {
				font-weight: bold;
			}
	 
			> tr:first-child {
				> th {
					border-top: 0;
				}
			}
		}
	 
		> tbody {
			> tr {
				&.success td {
					background-color: fade(@colorSuccess, 15%) !important;
				}
	 
				&.error td {
					background-color: fade(@colorError, 15%) !important;
				}
	 
				&.warning td {
					background-color: fade(@colorWarning, 15%) !important;
				}
	 
				&.info td {
					background-color: fade(@colorInfo, 15%) !important;
				}
			}
	 
			> tr:hover {
				> td {
					background-color: @colorTableHover !important;
				}
			}
		}
	 
	}
	 
	// Striping
	table.striped {
	 
		> tbody {
			> tr:nth-child(2n-1) {
				> td {
					background-color: @colorTableAccent;
				}
			}
		}
	 
	}
	 
	// Bordered
	table.bordered {
		border: 1px solid @colorTableBorder;
	 
		> thead {
			> tr {
				> th {
					border-left: 1px solid @colorTableBorder;
				}
	 
				> th:first-child {
					border-left: 0;
				}
			}
		}
	 
		> tbody {
			> tr {
				> td {
					border-left: 1px solid @colorTableBorder;
				}
	 
				> td:first-child {
					border-left: 0;
				}
			}
		}
	}
	 
	// Compacted Padding
	table.compact {
		thead > tr > th,
		tbody > tr > td {
			padding: 4px 5px;
		}
	}
	 
	// Rounded Table
	table.rounded {
		.rounded(@radiusTable);
		border-collapse: separate;

		> thead,
		> thead > tr:first-child {
			.border-radius(@radiusTable, 0, 0, @radiusTable);
		}
		> thead > tr:first-child {
			> th:first-child {
				.border-radius(0, 0, 0, @radiusTable);
			}
	 
			> th:last-child,
			> th.last-child {
				.border-radius(@radiusTable, 0, 0, 0);
			}
		}
	 
		> tbody,
		> tbody > tr:last-child,
		> tbody > tr.last-child {
			.border-radius(0, @radiusTable, @radiusTable, 0);
		}
		> tbody > tr:last-child,
		> tbody > tr.last-child {
			> td:first-child {
				.border-radius(0, 0, @radiusTable, 0);
			}
	 
			> td:last-child,
			> td.last-child, {
				.border-radius(0, @radiusTable, 0, 0);
			}
		}
	 
	}

}
 
// 12-Column Widths
.table-grid(@columns) {

	@columnWidth: round(100 / @columns, 3) * 1%;

	// Create the table grid
	.tableWidths (@index) when (@index < (@columns + 1)) {

		th.span-@{index}, td.span-@{index} {
			width: round(@index * @columnWidth, 4) * 1%;
		}

		.tableWidths (@index + 1);

	}
	.tableWidths (1);
 
}

.table-grid(5);

